<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fzu.teamwork.dao.QuestionDao">
  <resultMap id="BaseResultMap" type="com.fzu.teamwork.model.Question">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="auther_id" jdbcType="INTEGER" property="autherId" />
    <result column="response_num" jdbcType="INTEGER" property="responseNum" />
    <result column="report_num" jdbcType="INTEGER" property="reportNum" />
    <result column="create_time" jdbcType="TIME" property="createTime" />
    <result column="title_id" jdbcType="INTEGER" property="titleId" />
    <result column="content_id" jdbcType="INTEGER" property="contentId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, auther_id, response_num, report_num, create_time, title_id, content_id
  </sql>
  <select id="selectByExample" parameterType="com.fzu.teamwork.model.QuestionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from question
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from question
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fzu.teamwork.model.QuestionExample">
    delete from question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.fzu.teamwork.model.Question" useGeneratedKeys="true">
    insert into question (auther_id, response_num, report_num, 
      create_time, title_id, content_id
      )
    values (#{autherId,jdbcType=INTEGER}, #{responseNum,jdbcType=INTEGER}, #{reportNum,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIME}, #{titleId,jdbcType=INTEGER}, #{contentId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.fzu.teamwork.model.Question" useGeneratedKeys="true">
    insert into question
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="autherId != null">
        auther_id,
      </if>
      <if test="responseNum != null">
        response_num,
      </if>
      <if test="reportNum != null">
        report_num,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="titleId != null">
        title_id,
      </if>
      <if test="contentId != null">
        content_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="autherId != null">
        #{autherId,jdbcType=INTEGER},
      </if>
      <if test="responseNum != null">
        #{responseNum,jdbcType=INTEGER},
      </if>
      <if test="reportNum != null">
        #{reportNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIME},
      </if>
      <if test="titleId != null">
        #{titleId,jdbcType=INTEGER},
      </if>
      <if test="contentId != null">
        #{contentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fzu.teamwork.model.QuestionExample" resultType="java.lang.Long">
    select count(*) from question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update question
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.autherId != null">
        auther_id = #{record.autherId,jdbcType=INTEGER},
      </if>
      <if test="record.responseNum != null">
        response_num = #{record.responseNum,jdbcType=INTEGER},
      </if>
      <if test="record.reportNum != null">
        report_num = #{record.reportNum,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIME},
      </if>
      <if test="record.titleId != null">
        title_id = #{record.titleId,jdbcType=INTEGER},
      </if>
      <if test="record.contentId != null">
        content_id = #{record.contentId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update question
    set id = #{record.id,jdbcType=INTEGER},
      auther_id = #{record.autherId,jdbcType=INTEGER},
      response_num = #{record.responseNum,jdbcType=INTEGER},
      report_num = #{record.reportNum,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIME},
      title_id = #{record.titleId,jdbcType=INTEGER},
      content_id = #{record.contentId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fzu.teamwork.model.Question">
    update question
    <set>
      <if test="autherId != null">
        auther_id = #{autherId,jdbcType=INTEGER},
      </if>
      <if test="responseNum != null">
        response_num = #{responseNum,jdbcType=INTEGER},
      </if>
      <if test="reportNum != null">
        report_num = #{reportNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIME},
      </if>
      <if test="titleId != null">
        title_id = #{titleId,jdbcType=INTEGER},
      </if>
      <if test="contentId != null">
        content_id = #{contentId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fzu.teamwork.model.Question">
    update question
    set auther_id = #{autherId,jdbcType=INTEGER},
      response_num = #{responseNum,jdbcType=INTEGER},
      report_num = #{reportNum,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIME},
      title_id = #{titleId,jdbcType=INTEGER},
      content_id = #{contentId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>